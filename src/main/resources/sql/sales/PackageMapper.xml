<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happytravel.erp.sales.dao.PackageDao">

    <!-- 전체 패키지 목록 조회 -->
    <select id="getPackageList" resultType="kr.happytravel.erp.sales.model.PackageModel" parameterType="hashmap">
        SELECT
        package_code,
        package_name,
        start_date,
        end_date,
        hotel_code,
        flight_code,
        agency_code,
        total_price,
        sale_price,
        sale_start_date,
        sale_end_date,
        sale_amount,
        assign_code,
        is_used
        FROM
        TB_PACKAGE_INFO
        ORDER BY
        package_code
        <!-- LIMIT #{pageIndex}, #{pageSize} -->
    </select>

    <!-- 전체 목록 카운트 -->
    <select id="getPackageCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(package_code)
        FROM TB_PACKAGE_INFO
    </select>

    <!-- 단건 조회 -->
    <select id="selectPackage" resultType="kr.happytravel.erp.sales.model.PackageModel" parameterType="hashmap">
        SELECT
        package_code,
        package_name,
        start_date,
        end_date,
        hotel_code,
        flight_code,
        agency_code,
        total_price,
        sale_price,
        sale_start_date,
        sale_end_date,
        sale_amount,
        assign_code,
        is_used
        FROM
        TB_PACKAGE_INFO
        WHERE
        package_code = #{package_code}
    </select>

    <!-- 신규 등록 -->
    <insert id="insertPackage">
        <!-- 총 가격과 판매 가격의 비율을 확인하여 조건을 만족하지 않을 경우 예외를 발생시킴 -->
        INSERT INTO TB_PACKAGE_INFO (
        package_code,
        package_name,
        start_date,
        end_date,
        hotel_code,
        flight_code,
        agency_code,
        total_price,
        sale_price,
        sale_start_date,
        sale_end_date,
        sale_amount,
        assign_code,
        is_used
        )
        SELECT
        #{package_code},
        #{package_name},
        #{start_date},
        #{end_date},
        #{hotel_code},
        #{flight_code},
        #{agency_code},
        #{total_price},
        #{sale_price},
        #{sale_start_date},
        #{sale_end_date},
        #{sale_amount},
        #{assign_code},
        #{is_used}
        FROM dual
        WHERE #{sale_price} >= #{total_price} * 1.2
    </insert>

    <!-- 단건 수정 -->
    <update id="updatePackage">
        <!-- 총 가격과 판매 가격의 비율을 확인하여 조건을 만족하지 않을 경우 예외를 발생시킴 -->
        UPDATE TB_PACKAGE_INFO
        SET
        package_name = #{package_name},
        start_date = #{start_date},
        end_date = #{end_date},
        hotel_code = #{hotel_code},
        flight_code = #{flight_code},
        agency_code = #{agency_code},
        total_price = #{total_price},
        sale_price = #{sale_price},
        sale_start_date = #{sale_start_date},
        sale_end_date = #{sale_end_date},
        sale_amount = #{sale_amount},
        assign_code = #{assign_code},
        is_used = #{is_used}
        WHERE
        package_code = #{package_code}
        AND #{sale_price} >= #{total_price} * 1.2
    </update>

    <!-- 단건 삭제 -->
    <delete id="deletePackage">
        DELETE FROM TB_PACKAGE_INFO
        WHERE
        package_code = #{package_code}
    </delete>

</mapper>
